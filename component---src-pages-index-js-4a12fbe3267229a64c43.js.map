{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"q6BAwDA,IA7CY,WAAO,IAAD,IACXA,GAAOC,oBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACC,uBAAKC,UAAU,OACd,gBAAC,EAAAC,EAAD,CACCD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARL,uBAUCZ,aAAA,EAAAA,EAAQa,OACR,2BACC,uCACY,8BAASb,EAAOa,OAE5B,0BAAIb,aAAA,EAAAA,EAAQc,UAAW,U,+FCW5B,UArDkB,SAAC,GAAwB,IAAD,EAArBhB,EAAqB,EAArBA,KAAMiB,EAAe,EAAfA,SACpBC,GAAY,UAAAlB,EAAKG,KAAKC,oBAAV,eAAwBe,QAAxB,QACZC,EAAQpB,EAAKqB,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAER,gBAAC,IAAD,CAAQN,SAAUA,EAAUE,MAAOD,GAClC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLASF,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GAClC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,sBAAIK,MAAO,CAAEC,UAAU,SACrBL,EAAMM,KAAI,SAAAC,GACV,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACC,sBAAIC,IAAKJ,EAAKE,OAAOC,MACpB,2BAASxB,UAAU,iBAAiB0B,WAAS,EAACC,SAAS,6BACtD,8BACC,0BACC,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACpC,wBAAMA,SAAS,YAAYjB,KAG7B,6BAAQQ,EAAKC,YAAYS,OAE1B,+BACC,qBACCC,wBAAyB,CACxBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE9CL,SAAS","file":"component---src-pages-index-js-4a12fbe3267229a64c43.js","sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport { StaticImage } from 'gatsby-plugin-image';\r\n\r\nconst Bio = () => {\r\n\tconst data = useStaticQuery(graphql`\r\n\t\tquery BioQuery {\r\n\t\t\tsite {\r\n\t\t\t\tsiteMetadata {\r\n\t\t\t\t\tauthor {\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t\tsummary\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsocial {\r\n\t\t\t\t\t\ttwitter\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`);\r\n\r\n\t// Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n\tconst author = data.site.siteMetadata?.author;\r\n\tconst social = data.site.siteMetadata?.social;\r\n\r\n\treturn (\r\n\t\t<div className=\"bio\">\r\n\t\t\t<StaticImage\r\n\t\t\t\tclassName=\"bio-avatar\"\r\n\t\t\t\tlayout=\"fixed\"\r\n\t\t\t\tformats={['AUTO', 'WEBP', 'AVIF']}\r\n\t\t\t\tsrc=\"../images/profile-pic.jpg\"\r\n\t\t\t\twidth={50}\r\n\t\t\t\theight={50}\r\n\t\t\t\tquality={95}\r\n\t\t\t\talt=\"Profile picture\"\r\n\t\t\t/>\r\n\t\t\t{author?.name && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tWritten by <strong>{author.name}</strong>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>{author?.summary || null}</p>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Bio;\r\n","import * as React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Bio from '../components/bio';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n\tconst siteTitle = data.site.siteMetadata?.title || `Title`;\r\n\tconst posts = data.allMarkdownRemark.nodes;\r\n\r\n\tif (posts.length === 0) {\r\n\t\treturn (\r\n\t\t\t<Layout location={location} title={siteTitle}>\r\n\t\t\t\t<SEO title=\"All posts\" />\r\n\t\t\t\t<Bio />\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNo blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified for the \"gatsby-source-filesystem\"\r\n\t\t\t\t\tplugin in gatsby-config.js).\r\n\t\t\t\t</p>\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout location={location} title={siteTitle}>\r\n\t\t\t<SEO title=\"All posts\" />\r\n\t\t\t<Bio />\r\n\t\t\t<ol style={{ listStyle: `none` }}>\r\n\t\t\t\t{posts.map(post => {\r\n\t\t\t\t\tconst title = post.frontmatter.title || post.fields.slug;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={post.fields.slug}>\r\n\t\t\t\t\t\t\t<article className=\"post-list-item\" itemScope itemType=\"http://schema.org/Article\">\r\n\t\t\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={post.fields.slug} itemProp=\"url\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span itemProp=\"headline\">{title}</span>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t<small>{post.frontmatter.date}</small>\r\n\t\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t__html: post.frontmatter.description || post.excerpt,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\titemProp=\"description\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t</article>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ol>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default BlogIndex;\r\n\r\nexport const pageQuery = graphql`\r\n\tquery {\r\n\t\tsite {\r\n\t\t\tsiteMetadata {\r\n\t\t\t\ttitle\r\n\t\t\t}\r\n\t\t}\r\n\t\tallMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n\t\t\tnodes {\r\n\t\t\t\texcerpt\r\n\t\t\t\tfields {\r\n\t\t\t\t\tslug\r\n\t\t\t\t}\r\n\t\t\t\tfrontmatter {\r\n\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\r\n\t\t\t\t\ttitle\r\n\t\t\t\t\tdescription\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n"],"sourceRoot":""}